// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Signup UI render features component should render as expected 1`] = `
<_default>
  <Provider
    store={
      Object {
        "dispatch": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
        Symbol(observable): [Function],
      }
    }
  >
    <MemoryRouter
      initialEntries={
        Array [
          Object {
            "key": "testkey",
          },
        ]
      }
    >
      <Router
        history={
          Object {
            "action": "POP",
            "block": [Function],
            "canGo": [Function],
            "createHref": [Function],
            "entries": Array [
              Object {
                "hash": "",
                "key": "testkey",
                "pathname": "/",
                "search": "",
              },
            ],
            "go": [Function],
            "goBack": [Function],
            "goForward": [Function],
            "index": 0,
            "length": 1,
            "listen": [Function],
            "location": Object {
              "hash": "",
              "key": "testkey",
              "pathname": "/",
              "search": "",
            },
            "push": [Function],
            "replace": [Function],
          }
        }
      >
        <Connect(Signup)
          response={
            Object {
              "addEntry": [MockFunction],
              "auth": Object {
                "error": false,
              },
              "entries": Object {
                "newEntryError": Object {
                  "data": Object {
                    "message": "new",
                  },
                  "length": 5,
                },
              },
            }
          }
        >
          <Signup
            response={
              Object {
                "auth": Object {
                  "authenticated": null,
                  "firstName": null,
                  "lastName": null,
                },
                "entries": Object {
                  "authenticated": "",
                  "deletedEntry": Array [],
                  "deletedEntryError": Array [],
                  "deletedReminder": Array [],
                  "deletedReminderError": Array [],
                  "editedEntry": Array [],
                  "editedEntryError": Array [],
                  "entries": Array [],
                  "entriesError": Array [],
                  "error": Array [],
                  "existingReminder": Array [],
                  "existingReminderError": Array [],
                  "firstName": "",
                  "lastName": "",
                  "newEntry": Array [],
                  "newEntryError": Array [],
                  "newReminder": Array [],
                  "newReminderError": Array [],
                  "singleEntry": Array [],
                  "singleEntryError": Array [],
                  "status": "",
                },
                "profile": Object {
                  "authenticated": "",
                  "deletedEntry": Array [],
                  "deletedEntryError": Array [],
                  "deletedReminder": Array [],
                  "deletedReminderError": Array [],
                  "editedEntry": Array [],
                  "editedEntryError": Array [],
                  "entries": Array [],
                  "entriesError": Array [],
                  "error": Array [],
                  "existingReminder": Array [],
                  "existingReminderError": Array [],
                  "firstName": "",
                  "lastName": "",
                  "newEntry": Array [],
                  "newEntryError": Array [],
                  "newReminder": Array [],
                  "newReminderError": Array [],
                  "singleEntry": Array [],
                  "singleEntryError": Array [],
                  "status": "",
                },
              }
            }
            signup={[Function]}
          >
            <div
              className="hero-account"
            >
              <h3>
                Create your MyDiary Account
              </h3>
              <p
                className="errorResponse"
                id="errorResponse"
              />
              <form
                onSubmit={[Function]}
              >
                <input
                  id="firstName"
                  onChange={[Function]}
                  placeholder="First Name"
                  required={true}
                  type="text"
                />
                <span
                  className="errorResponse"
                />
                <input
                  id="lastName"
                  onChange={[Function]}
                  placeholder="Last Name"
                  required={true}
                  type="text"
                />
                <span
                  className="errorResponse"
                />
                <input
                  id="email"
                  onChange={[Function]}
                  placeholder="Email"
                  required={true}
                  type="email"
                />
                <span
                  className="errorResponse"
                />
                <input
                  id="password"
                  min="8"
                  onChange={[Function]}
                  placeholder="Password"
                  required={true}
                  type="password"
                />
                <span
                  className="errorResponse"
                />
                <input
                  id="confirmPassword"
                  min="8"
                  onChange={[Function]}
                  placeholder="Confirm Password"
                  required={true}
                  type="password"
                />
                <span
                  className="errorResponse"
                />
                <button
                  id="submit"
                  type="submit"
                >
                  Create Account
                </button>
              </form>
              <p>
                Already have an account? then
                <Link
                  replace={false}
                  to="/auth/signin"
                >
                  <a
                    href="/auth/signin"
                    onClick={[Function]}
                  >
                     Sign in
                  </a>
                </Link>
              </p>
            </div>
          </Signup>
        </Connect(Signup)>
      </Router>
    </MemoryRouter>
  </Provider>
</_default>
`;
